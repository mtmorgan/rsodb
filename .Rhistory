devtools::load_all()
args(print)
devtools::load_all()
sodb()
devtools::document()
devtools::document()
sodb()
devtools::document()
sodb()
json <- sodb_inf()
json <- sodb_info()
listviewer::jsonedit(json)
rjsoncons::jmespath(json, "object.code")
rjsoncons::jmespath(json, "object")
rjsoncons::jmespath(json, "[].object")
rjsoncons::jmespath(json, "code")
rjsoncons::jmespath(json, "code")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
sodb9)
sodb()
jmespath("data[*]") |> dplyr::as_tibble()
jmespath(json, "data[*]") |> dplyr::as_tibble()
jmespath(json, "data[*]") |> dplyr::tibble()
jmespath(json, "data[*][]") |> dplyr::tibble()
jmespath(json, "data[*][]") |> dplyr::as_tibble()
jmespath(json, "data[*][*]") |> dplyr::as_tibble()
jmespath(json, "data[*][0]") |> dplyr::as_tibble()
jmespath(json, "data[*][0]") |> jsonlite::fromJSON() |> dplyr::as_tibble()
jmespath(json, "data[*]") |> jsonlite::fromJSON() |> dplyr::as_tibble()
args(jsonlite::fromJSON)
args(jsonlite::parse_json)
devtools::document()
devtools::document()
tbl <- sodb_info()
tbl
args(jsonlite::fromJSON)
args(jsonlite::parse_json)
devtools::document()
tbl <- sodb_info()
tbl
tbl |> dplyr::count(V1)
tbl |> dplyr::count(V2)
tbl |> dplyr::count(V3)
tbl |> dplyr::count(V3, sort = TRUE)
args(as_tibble)
?as_tibble
sodb()
devtools::load_all()
db = sodb()
db
devtools::load_all()
db
devtools::load_all()
db
sodb_info(db)
debug(.sodb_info)
sodb()
n
json |>
        jmespath("data[*]") |>
        jsonlite::parse_json(simplifyVector = TRUE) |>
        as_tibble(column_names = c("Category", "Dataset", "Experiment"))
?as_tibble
Q
devtools::document()
devtools::document()
db = sodb()
db
devtools::load_all()
db
sodb_server
db$server
devtools::load_all()
db
info(db)
sdb_info(db)
sodb_info(db)
devtools::load_all()
count(sodb_info(db))
dplyr::count(sodb_info(db))
dplyr::count(sodb_info(db), "Category")
dplyr::count(sodb_info(db), "Category") |> pull()
dplyr::count(sodb_info(db), Category) |> dplyr::pull()
dplyr::count(sodb_info(db), Category) 
devtools::load_all()
db
sodb_info(db)
sodb_info()
devtools::document()
devtools::document()
sodb_experiment(db)
db
devtools::document()
sodb_experiment(db)
db
devtools::document()
sodb_experiment(db)
sodb_info(db)
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::document()
db = sodb()
db
class(db)
sodb_experiment(db)
sodb_experiment(db, "liu2020high")
devtools::document()
sodb_experiment(db, "liu2020high")
devtools::document()
sodb_experiment(db, "liu2020high")
sodb_experiment(db, "liu2020high", "E11_lower_body")
sodb_experiment(db, "liu2020high", "E11_lower_body")
db
db |> filter(grepl("E1", Experiment))
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high")
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_experiment()
devtools::document()
devtools::document()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_experiment()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
devtools::document()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
db
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
args(startsWith)
devtools::load_all()
db
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
devtools::load_all()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
devtools::load_all()
devtools::load_all()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
devtools::load_all()
devtools::load_all()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
devtools::load_all()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
devtools::load_all()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
devtools::load_all()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
devtools::load_all()
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download()
Sys.time()
db
db |> group_by(Dataset) |> count(Experiment)
db |> dplyr::group_by(Dataset) |> dplyr::count(Experiment)
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> sodb_download() |> dplyr::group_by(Dataset) |> dplyr::count(Experiment)
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> dplyr::group_by(Dataset) |> dplyr::count(Experiment)
db |> filter(grepl("E1", Experiment), Dataset == "liu2020high") |> dplyr::group_by(Dataset) |> dplyr::count(Experiment) |> NROW()
devtools::document()
devtools::document()
devtools::document()
db
devtools::document()
devtools::document()
devtools::document()
db
db |> filter(FALSE)
db |> filter(FALSE) |> sodb_download()
db |> filter(FALSE) |> sodb_download(dry.run = FALSE)
devtools::document()
db |> filter(FALSE) |> sodb_download()
db |> filter(FALSE) |> sodb_download(dry.run = FALSE)
db
db |> select(Dataset, "Experiment")
db |> dplyr::select(Dataset, "Experiment")
db |> dplyr::select("Dataset", "Experiment")
glue::glue
?glue::glue
glue::glue("foo/{Dataset}/{Experiment}", .envir = head(db))
packageDescription("glue")
glue::glue_data
devtools::document()
devtools::document()
db |> filter(FALSE) |> sodb_download(dry.run = FALSE)
db |> dplyr::slice(2) |> sodb_download(dry.run = FALSE)
db |> dplyr::slice(2) |> sodb_download(dry.run = FALSE) |> print()
db |> dplyr::slice(2)
db |> dplyr::slice(1:2)
db |> dplyr::slice(1:2) |> sodb_download(dry.run = FALSE) |> print()
devtools::document()
db |> filter(FALSE) |> sodb_download(dry.run = FALSE)
devtools::document()
db |> filter(FALSE) |> sodb_download(dry.run = FALSE)
db |> filter(FALSE) |> sodb_download(dry.run = FALSE) |> class()
devtools::document()
db |> filter(FALSE) |> sodb_download(dry.run = FALSE) |> class()
db |> filter(FALSE) |> sodb_download(dry.run = FALSE)
devtools::load_all()
db |> slice(1:2) |> sodb_download(dry.run = FALSE)
db |> dplyr::slice(1:2) |> sodb_download(dry.run = FALSE)
hash
?glue::glue_data_safe
?glue::identity_transformer
hash
getAnywhere("hash")
?rlang::hash
hash(letters)
rlang::p
rlang::hash(letters)
devtools::load_all()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
tools::R_user_dir
args(tools::R_user_dir)
devtools::document()
devtools::document()
.cache()
devtools::document()
.cache
devtools::document()
devtools::load_all()
.cache
q()
